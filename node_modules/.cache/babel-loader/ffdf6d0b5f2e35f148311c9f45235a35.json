{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/website/src/components/ProjectCard.tsx\";\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport { useSpring, animated } from 'react-spring';\n\nconst ProjectCard = props => {\n  const classes = props.classes;\n  const calc = 1.05;\n\n  const trans = s => `perspective(1rem) scale(${s})`;\n\n  const [properties, set] = useSpring(() => ({\n    s: 1,\n    config: {\n      mass: 5,\n      tension: 700,\n      friction: 40\n    }\n  }));\n  const [isShowing, setIsShowing] = useState(false);\n  const [flipped, setFlipped] = useState(false);\n  const {\n    transform,\n    opacity\n  } = useSpring({\n    opacity: flipped ? 1 : 0,\n    transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n    config: {\n      mass: 5,\n      tension: 500,\n      friction: 80\n    }\n  });\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onClick: () => setFlipped(state => !state),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    onMouseMove: () => set({\n      s: calc\n    }),\n    onMouseLeave: () => set({\n      s: 1\n    }),\n    style: {\n      opacity: opacity.interpolate(o => 1 - o),\n      transform: properties.s.interpolate(trans)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: () => setIsShowing(true),\n    onMouseLeave: () => setIsShowing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 29\n    }\n  }, isShowing && props.title), /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    image: props.background,\n    className: classes.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 29\n    }\n  })))), /*#__PURE__*/React.createElement(animated.div, {\n    style: {\n      opacity,\n      transform: transform.interpolate(t => `${t} rotateX(180deg)`)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    onMouseEnter: () => setIsShowing(true),\n    onMouseLeave: () => setIsShowing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 29\n    }\n  }, isShowing && props.title), /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    image: props.background,\n    className: classes.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }\n  }))))));\n};\n\nconst useStyles = createStyles({\n  text: {\n    position: 'absolute',\n    fontFamily: 'Montserrat',\n    color: '#12130F',\n    fontSize: '2rem',\n    justifyContent: 'center',\n    padding: '1rem'\n  },\n  picture: {\n    height: '100%',\n    width: '100%',\n    opacity: 1,\n    '&:hover': {\n      opacity: .35,\n      textDecorationColor: '#4062BB',\n      transitionDuration: '.5s'\n    }\n  },\n  card: {\n    position: 'relative',\n    height: '100%',\n    width: '100%',\n    '&:hover': {\n      opacity: .35,\n      textDecorationColor: '#4062BB',\n      transitionDuration: '.5s'\n    }\n  }\n});\nexport default withStyles(useStyles)(ProjectCard);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/website/src/components/ProjectCard.tsx"],"names":["React","useState","Typography","Grid","Card","CardMedia","withStyles","createStyles","useSpring","animated","ProjectCard","props","classes","calc","trans","s","properties","set","config","mass","tension","friction","isShowing","setIsShowing","flipped","setFlipped","transform","opacity","state","interpolate","o","card","text","title","background","picture","t","useStyles","position","fontFamily","color","fontSize","justifyContent","padding","height","width","textDecorationColor","transitionDuration"],"mappings":"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","sourcesContent":["import React, {useState, PropsWithChildren} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport StyledProps from '../props/StyledProps';\nimport ProjectCardProps from '../props/ProjectCardProps';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport {useSpring, animated} from 'react-spring';\n\n\n\n\nconst ProjectCard = (props: PropsWithChildren<StyledProps> & ProjectCardProps) => {\n    const classes = props.classes;\n    const calc = 1.05\n    const trans : any = (s : any) : any => `perspective(1rem) scale(${s})`    \n    const [properties, set] = useSpring(() => ({ s: 1, config: { mass: 5, tension: 700, friction: 40 } }))\n    const[isShowing, setIsShowing] = useState(false);\n    const [flipped, setFlipped] = useState(false);\n    const { transform, opacity } = useSpring({\n        opacity: flipped ? 1: 0,\n        transform: `perspective(600px) rotateX(${flipped ? 180 : 0}deg)`,\n        config: { mass: 5, tension: 500, friction: 80 }\n    })\n    \n    return(\n        <Grid item xs={4}>\n            <div onClick={() => setFlipped(state => !state)}>\n                <animated.div\n                onMouseMove={() => set({ s: calc })}\n                onMouseLeave={() => set({ s: 1 })}\n                style={{ opacity: opacity.interpolate((o: any) => 1 - o), transform: properties.s.interpolate(trans) }}\n                >\n                    <Card className={classes.card}>\n                        <div onMouseEnter={() => setIsShowing(true)} onMouseLeave={() => setIsShowing(false)}>\n                            <Typography className={classes.text}>\n                                {isShowing && (props.title)}\n                            </Typography>\n                            <CardMedia component=\"img\" image={(props.background)} className={classes.picture}/>\n                        </div>\n                    </Card>\n                </animated.div>\n                <animated.div style={{ opacity, transform: transform.interpolate(t => `${t} rotateX(180deg)`) }}>\n                    <Card className={classes.card}>\n                        <div onMouseEnter={() => setIsShowing(true)} onMouseLeave={() => setIsShowing(false)}>\n                            <Typography className={classes.text}>\n                                {isShowing && (props.title)}\n                            </Typography>\n                            <CardMedia component=\"img\" image={(props.background)} className={classes.picture}/>\n                        </div>\n                    </Card>\n                </animated.div>\n            </div>\n        </Grid>\n    );\n}\n\nconst useStyles = createStyles({\n    text: {\n      position: 'absolute',\n      fontFamily: 'Montserrat',\n      color: '#12130F',\n      fontSize: '2rem',\n      justifyContent: 'center',\n      padding: '1rem',\n    },\n    picture: {\n        height: '100%',\n        width: '100%',\n        opacity: 1,\n        '&:hover': {\n            opacity: .35,\n            textDecorationColor : '#4062BB',\n            transitionDuration: '.5s',\n        },\n    },\n    card: {\n        position: 'relative',\n        height: '100%',\n        width: '100%',\n        '&:hover': {\n            opacity: .35,\n            textDecorationColor : '#4062BB',\n            transitionDuration: '.5s',\n        },\n    },\n  });\n  \n  export default withStyles(useStyles)(ProjectCard);"]},"metadata":{},"sourceType":"module"}