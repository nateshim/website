{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/website/src/devlog.tsx\";\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport './css/About.css';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport OtherContact from './OtherContact';\nimport OtherNavigation from './OtherNavigation';\nimport BlogCard from './components/BlogCard';\nimport { Grid, Typography, Divider } from '@material-ui/core';\nimport logo1 from './static/blog/10.04.2020/1.png';\nimport logo2 from './static/blog/10.04.2020/2.png';\nimport logo3 from './static/blog/10.04.2020/3.png';\n\nconst Devlog = props => {\n  const classes = props.classes;\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.backgroundContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OtherNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: classes.section,\n    maxWidth: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlogCard, {\n    title: \"Pixit\",\n    subtitle: \"10.04.2020\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, \"Recently, I have been interested in real time applications and decided to make my own real time app. The first idea I thought of was building a real time coding editor that would allow for developers to collaborate more efficiently on debugging/writing code. I thought it was a really cool, fresh idea that had a lot of potential and could help a lot of developers out there. Eventually though, I found out about CodeSandbox and the many other apps that already provide real-time coding environments so I decided to instead make a real time pixel editor, Pixit.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }\n  }, \"The development for Pixit started around 2 weeks before this post, but I wanted to start documenting this process as I will be learning and implementing a lot of things for the first time, and I would like to look back on this journey to see what I've learned and how far I've come.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"Currently, I am still setting up the environment. I have the react app set up and am looking into developing the server for the app.\"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"I've also been doodling on Aseprite for logos. Here are some drafts:\"), /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    alt: \"draft1\",\n    src: logo1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    alt: \"draft2\",\n    src: logo2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"img\", {\n    className: classes.image,\n    alt: \"draft3\",\n    src: logo3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.linkText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, \"Links: \"), /*#__PURE__*/React.createElement(Typography, {\n    className: classes.linkText,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"Pusher Tutorial: \", /*#__PURE__*/React.createElement(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: \"https://pusher.com/tutorials/code-playground-react\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 71\n    }\n  }, \"https://pusher.com/tutorials/code-playground-react\"))))), /*#__PURE__*/React.createElement(OtherContact, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst useStyles = theme => createStyles({\n  backgroundContainer: {\n    backgroundSize: 'cover',\n    height: '100%',\n    width: '100%',\n    margin: '0px',\n    padding: '0px',\n    overflowX: 'hidden',\n    backgroundColor: '#F7F3F2',\n    alignItems: 'center'\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#F7F3F2',\n    alignItems: 'center',\n    padding: '2rem'\n  },\n  image: {\n    padding: '1rem',\n    display: 'flex'\n  },\n  text: {\n    color: '#12130F',\n    fontSize: '1.25rem',\n    textAlign: 'left',\n    padding: '1rem',\n    cursor: 'default',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '.5rem'\n    }\n  },\n  linkText: {\n    color: '#12130F',\n    fontSize: '1rem',\n    opacity: '.5',\n    textAlign: 'left',\n    padding: '1rem',\n    cursor: 'default',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '.25rem',\n      padding: '.5rem'\n    }\n  }\n});\n\nexport default withStyles(useStyles)(Devlog);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/website/src/devlog.tsx"],"names":["React","Box","Container","withStyles","createStyles","OtherContact","OtherNavigation","BlogCard","Grid","Typography","Divider","logo1","logo2","logo3","Devlog","props","classes","backgroundContainer","section","text","image","linkText","useStyles","theme","backgroundSize","height","width","margin","padding","overflowX","backgroundColor","alignItems","display","flexDirection","color","fontSize","textAlign","cursor","breakpoints","down","opacity"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport './css/About.css';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport OtherContact from './OtherContact';\nimport OtherNavigation from './OtherNavigation';\nimport StyledProps from './props/StyledProps';\nimport BlogCard from './components/BlogCard';\nimport { \n  Theme,\n  Grid,\n  Typography,\n  Divider,\n} from '@material-ui/core';\nimport logo1 from './static/blog/10.04.2020/1.png';\nimport logo2 from './static/blog/10.04.2020/2.png';\nimport logo3 from './static/blog/10.04.2020/3.png';\n\nconst Devlog = (props: StyledProps) => {\n  const classes = props.classes;\n  return (   \n    <Box className={classes.backgroundContainer}>\n      <OtherNavigation/>\n      <Container className={classes.section} maxWidth={false}>\n        <Grid container xs={8}>\n          <BlogCard title=\"Pixit\" subtitle=\"10.04.2020\">\n            <Typography className={classes.text}>\n              Recently, I have been interested in real time applications and decided to make my own real time app. \n              The first idea I thought of was building a real time coding editor that would allow for developers to collaborate more efficiently on debugging/writing code.\n              I thought it was a really cool, fresh idea that had a lot of potential and could help a lot of developers out there. Eventually though, I found out about CodeSandbox and the many other apps that already provide real-time coding environments so I decided to instead make a real time pixel editor, Pixit. \n            </Typography>\n            <Typography className={classes.text}>\n              The development for Pixit started around 2 weeks before this post, but I wanted to start documenting this process as I will be learning and implementing a lot of things for the first time, and I would like to look back on this journey to see what I've learned and how far I've come.\n            </Typography>\n            <Typography className={classes.text}>\n              Currently, I am still setting up the environment. I have the react app set up and am looking into developing the server for the app.\n            </Typography>\n            <Typography className={classes.text}>\n              I've also been doodling on Aseprite for logos. Here are some drafts:\n            </Typography>\n            <img className={classes.image} alt=\"draft1\" src={logo1}/>\n            <img className={classes.image} alt=\"draft2\" src={logo2}/>\n            <img className={classes.image} alt=\"draft3\" src={logo3}/>\n            <Divider/>\n            <Typography className={classes.linkText}>Links: </Typography>\n            <Typography className={classes.linkText}>Pusher Tutorial: <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://pusher.com/tutorials/code-playground-react\">https://pusher.com/tutorials/code-playground-react</a></Typography>\n          </BlogCard>\n        </Grid>\n      </Container>\n      <OtherContact/>\n    </Box> \n  );\n}\n\nconst useStyles = (theme: Theme) => createStyles({\n  backgroundContainer: {\n    backgroundSize: 'cover',\n    height: '100%',\n    width: '100%',\n    margin: '0px',\n    padding: '0px',\n    overflowX: 'hidden',\n    backgroundColor: '#F7F3F2',\n    alignItems: 'center',\n  },\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#F7F3F2',\n    alignItems: 'center',\n    padding: '2rem',\n  },\n  image: {\n    padding: '1rem',\n    display: 'flex',\n  },\n  text: {\n    color: '#12130F',\n    fontSize: '1.25rem',\n    textAlign: 'left',\n    padding: '1rem',\n    cursor: 'default',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '.5rem',\n    }\n  },\n  linkText: {\n    color: '#12130F',\n    fontSize: '1rem',\n    opacity: '.5',\n    textAlign: 'left',\n    padding: '1rem',\n    cursor: 'default',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '.25rem',\n      padding: '.5rem',\n    }\n  },\n});\n\nexport default withStyles(useStyles)(Devlog);"]},"metadata":{},"sourceType":"module"}