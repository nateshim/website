{"ast":null,"code":"var _jsxFileName = \"/Users/johnshim/Desktop/website/src/apps/countdowntimer/App.js\";\nimport React from 'react';\nimport './css/App.css';\nimport background from './gnight.gif';\nimport Timer from './Timer';\nimport TimerInput from './TimerInput';\nimport StartButton from './StartButton';\nimport StopButton from './StopButton';\nimport Grid from '@material-ui/core/Grid';\nimport { Parallax } from 'react-parallax';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      seconds: '00',\n      minutes: '00',\n      hours: '00',\n      isDisabled: false,\n      selectedColor: \"red\"\n    };\n\n    this.chooseSound = color => this.setState({\n      selectedColor: color\n    });\n\n    this.playAudio = () => {\n      switch (this.state.selectedColor) {\n        case \"red\":\n          this.red.play();\n\n        default:\n          this.red.play();\n      }\n    };\n\n    this.secondsRemaining = '0';\n    this.intervalHandle = '0';\n    this.handleHourChange = this.handleHourChange.bind(this);\n    this.handleMinuteChange = this.handleMinuteChange.bind(this);\n    this.startCountDown = this.startCountDown.bind(this);\n    this.stopCountDown = this.stopCountDown.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n\n  handleHourChange(event) {\n    this.setState({\n      hours: event.target.value\n    });\n  }\n\n  handleMinuteChange(event) {\n    this.setState({\n      minutes: event.target.value\n    });\n  }\n\n  tick() {\n    if (this.state.minutes === '') {} else {\n      if (this.secondsRemaining >= 3600) {\n        var hr = Math.floor(this.secondsRemaining / 3600);\n        var min = Math.floor((this.secondsRemaining - hr * 3600) / 60);\n        var sec = this.secondsRemaining - min * 60 - hr * 3600;\n      } else {\n        var hr = '00';\n        var min = Math.floor(this.secondsRemaining / 60);\n        var sec = this.secondsRemaining - min * 60;\n      }\n\n      this.setState({\n        hours: hr,\n        minutes: min,\n        seconds: sec\n      });\n\n      if (hr < 10 && hr > 0) {\n        this.setState({\n          hours: \"0\" + this.state.hours\n        });\n      }\n\n      if (sec < 10) {\n        this.setState({\n          seconds: \"0\" + sec\n        });\n      }\n\n      if (min < 10) {\n        this.setState({\n          minutes: \"0\" + min\n        });\n      }\n\n      if (min == '00' & sec == '00' && hr == '00') {\n        clearInterval(this.intervalHandle);\n        this.playAudio();\n      }\n\n      this.secondsRemaining--;\n    }\n  }\n\n  startCountDown() {\n    if (this.state.minutes === '00' && this.state.hours === '00' && this.state.seconds === '00') {} else if (this.state.isDisabled) {} else {\n      this.setState({\n        isDisabled: true\n      });\n      this.intervalHandle = setInterval(this.tick, 1000);\n      let time = this.state.minutes;\n\n      if (this.state.hours == '00') {\n        this.secondsRemaining = this.state.seconds + time * 60;\n      } else {\n        this.secondsRemaining = this.state.seconds + time * 60 + this.state.hours * 3600;\n      }\n    }\n  }\n\n  stopCountDown() {\n    this.setState({\n      isDisabled: false\n    });\n    clearInterval(this.intervalHandle);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Parallax, {\n      strength: 200,\n      bgImage: background,\n      style: {\n        height: 1000,\n        position: 'relative'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, React.createElement(TimerInput, {\n      hours: this.state.hours,\n      minutes: this.state.minutes,\n      handleMinuteChange: this.handleMinuteChange,\n      handleHourChange: this.handleHourChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        height: 100\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Timer, {\n      hours: this.state.hours,\n      minutes: this.state.minutes,\n      seconds: this.state.seconds,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      style: {\n        height: 50\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Grid, {\n      container: true,\n      spacing: 5,\n      style: {\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(StartButton, {\n      startCountDown: this.startCountDown,\n      minutes: this.state.minutes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    })), React.createElement(Grid, {\n      item: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(StopButton, {\n      stopCountDown: this.stopCountDown,\n      minutes: this.state.minutes,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    })))), React.createElement(\"audio\", {\n      ref: red => {\n        this.red = red;\n      },\n      loop: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(\"source\", {\n      src: \"https://actions.google.com/sounds/v1/alarms/alarm_clock.ogg\",\n      type: \"audio/ogg\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/johnshim/Desktop/website/src/apps/countdowntimer/App.js"],"names":["React","background","Timer","TimerInput","StartButton","StopButton","Grid","Parallax","App","Component","constructor","props","state","seconds","minutes","hours","isDisabled","selectedColor","chooseSound","color","setState","playAudio","red","play","secondsRemaining","intervalHandle","handleHourChange","bind","handleMinuteChange","startCountDown","stopCountDown","tick","event","target","value","hr","Math","floor","min","sec","clearInterval","setInterval","time","render","height","position","justifyContent"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './css/App.css';\nimport background from './gnight.gif';\nimport Timer from './Timer';\nimport TimerInput from './TimerInput';\nimport StartButton from './StartButton';\nimport StopButton from './StopButton';\nimport Grid from '@material-ui/core/Grid';\nimport { Parallax } from 'react-parallax';\n\n\nclass App extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      seconds: '00',\n      minutes: '00',\n      hours: '00',\n      isDisabled: false,\n      selectedColor: \"red\"\n    }\n\t  this.chooseSound = (color) => this.setState({selectedColor: color});\n\t  this.playAudio = () => {\n\t\tswitch(this.state.selectedColor){\n\t\t\tcase \"red\":\n\t\t\t\tthis.red.play();\n\t\t\tdefault:\n\t\t\t\tthis.red.play();\n\t\t\t\t\t\t\t\t\t   }\n\t  }\n    this.secondsRemaining = '0';\n    this.intervalHandle = '0';\n    this.handleHourChange = this.handleHourChange.bind(this);\n    this.handleMinuteChange = this.handleMinuteChange.bind(this);\n    this.startCountDown = this.startCountDown.bind(this);\n    this.stopCountDown = this.stopCountDown.bind(this);\n    this.tick = this.tick.bind(this);\n  }\n  handleHourChange(event) {\n    this.setState({\n      hours: event.target.value\n    })\n  }\n  handleMinuteChange(event) {\n    this.setState({\n      minutes: event.target.value\n    })\n  }\n\n  tick() {\n    if (this.state.minutes === '') {\n\n    } else {\n      if (this.secondsRemaining >= 3600) {\n        var hr = Math.floor(this.secondsRemaining/3600);\n        var min = Math.floor((this.secondsRemaining - (hr*3600))/60);\n        var sec = this.secondsRemaining - (min*60) - (hr*3600);\n      } else {\n        var hr = '00';\n        var min = Math.floor(this.secondsRemaining/60);\n        var sec = this.secondsRemaining - (min*60);\n      }\n\n      this.setState({\n        hours: hr,\n        minutes: min,\n        seconds: sec,\n      })\n        if (hr < 10 && hr > 0) {\n          this.setState({\n            hours: \"0\" + this.state.hours,\n          })\n        }\n        if (sec < 10) {\n          this.setState({\n            seconds: \"0\" + sec,\n          })\n        }\n        if (min < 10) {\n          this.setState({\n            minutes: \"0\" + min,\n          })\n        }\n        if (min =='00' & sec == '00' && hr == '00') {\n          clearInterval(this.intervalHandle);\n          this.playAudio();\n        }\n        this.secondsRemaining--\n    }\n  }\n\n  startCountDown() {\n    if (this.state.minutes === '00' && this.state.hours==='00' && this.state.seconds==='00') {\n      \n    } else if (this.state.isDisabled) {\n\n    } else {\n      this.setState({\n        isDisabled: true,\n      })\n\n      this.intervalHandle = setInterval(this.tick, 1000);\n\n      let time = this.state.minutes;\n      if (this.state.hours == '00') {\n        this.secondsRemaining =  this.state.seconds+(time*60);\n      } else {\n        this.secondsRemaining =  this.state.seconds+(time*60)+(this.state.hours*3600);\n      }\n    }\n  }\n\n  stopCountDown() {\n      this.setState({\n        isDisabled: false,\n      })\n      clearInterval(this.intervalHandle);\n  }\n\n  render() {\n    return (\n      <div>\n        <Parallax strength={200} bgImage={background} style={{height: 1000, position: 'relative'}}>\n        <TimerInput hours={this.state.hours} minutes={this.state.minutes} handleMinuteChange={this.handleMinuteChange} handleHourChange={this.handleHourChange}/>\n        <div style={{height: 100}}/>\n        <Timer hours={this.state.hours} minutes={this.state.minutes} seconds = {this.state.seconds}/>\n        <div style={{height:50}}/>\n        <Grid container spacing={5}style={{justifyContent: 'center'}}>\n            <Grid item>\n              <StartButton startCountDown={this.startCountDown} minutes={this.state.minutes}/>\n            </Grid>\n            <Grid item>\n              <StopButton stopCountDown={this.stopCountDown} minutes={this.state.minutes}/>\n            </Grid>\n          </Grid>\n        </Parallax>\n          <audio ref={(red) => { this.red = red; }} loop>\n\t\t\t      <source src=\"https://actions.google.com/sounds/v1/alarms/alarm_clock.ogg\" type=\"audio/ogg\" >\n\t\t\t      </source>\n\t\t      </audio>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}