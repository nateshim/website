{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/website/src/devlog.tsx\";\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport './css/About.css';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport OtherContact from './OtherContact';\nimport OtherNavigation from './OtherNavigation';\nimport BlogCard from './components/BlogCard';\nimport { Grid, Typography } from '@material-ui/core';\n\nconst Devlog = props => {\n  const classes = props.classes;\n  return /*#__PURE__*/React.createElement(Box, {\n    className: classes.backgroundContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(OtherNavigation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Container, {\n    className: classes.section,\n    maxWidth: false,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BlogCard, {\n    title: \"Pixit\",\n    subtitle: \"10.04.2020\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }\n  }, \"Recently, I have been interested in real time applications and decided to make my own real time app. The first idea I thought of was building a real time coding editor that would allow for developers to collaborate more efficiently on debugging/writing code. I thought it was a really cool, fresh idea that had a lot of potential and could help a lot of developers out there. So I got started.\")))), /*#__PURE__*/React.createElement(OtherContact, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }));\n};\n\nconst useStyles = theme => createStyles({\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#F7F3F2',\n    alignItems: 'center'\n  },\n  text: {\n    color: '#12130F',\n    fontSize: '1.25rem',\n    textAlign: 'left',\n    padding: '2rem',\n    cursor: 'default',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '1rem'\n    }\n  },\n  bigText: {\n    color: '#12130F',\n    fontSize: '3rem',\n    textAlign: 'center',\n    paddingBottom: '15rem',\n    fontWeight: 'bold',\n    cursor: 'default'\n  },\n  backgroundContainer: {\n    backgroundSize: 'cover',\n    height: '100%',\n    width: '100%',\n    backgroundPosition: 'center',\n    backgroundColor: '#F7F3F2'\n  }\n});\n\nexport default withStyles(useStyles)(Devlog);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/website/src/devlog.tsx"],"names":["React","Box","Container","withStyles","createStyles","OtherContact","OtherNavigation","BlogCard","Grid","Typography","Devlog","props","classes","backgroundContainer","section","text","useStyles","theme","display","flexDirection","backgroundColor","alignItems","color","fontSize","textAlign","padding","cursor","breakpoints","down","bigText","paddingBottom","fontWeight","backgroundSize","height","width","backgroundPosition"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,uBAAhB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAO,iBAAP;AACA,SAAQC,UAAR,EAAoBC,YAApB,QAAuC,qBAAvC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEA,OAAOC,QAAP,MAAqB,uBAArB;AACA,SAEEC,IAFF,EAGEC,UAHF,QAIO,mBAJP;;AAMA,MAAMC,MAAM,GAAIC,KAAD,IAAwB;AACrC,QAAMC,OAAO,GAAGD,KAAK,CAACC,OAAtB;AACA,sBACE,oBAAC,GAAD;AAAK,IAAA,SAAS,EAAEA,OAAO,CAACC,mBAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAED,OAAO,CAACE,OAA9B;AAAuC,IAAA,QAAQ,EAAE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,EAAE,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAC,OAAhB;AAAwB,IAAA,QAAQ,EAAC,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,SAAS,EAAEF,OAAO,CAACG,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iZADF,CADF,CADF,CAFF,eAaE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD,CAnBD;;AAqBA,MAAMC,SAAS,GAAIC,KAAD,IAAkBb,YAAY,CAAC;AAC/CU,EAAAA,OAAO,EAAE;AACPI,IAAAA,OAAO,EAAE,MADF;AAEPC,IAAAA,aAAa,EAAE,QAFR;AAGPC,IAAAA,eAAe,EAAE,SAHV;AAIPC,IAAAA,UAAU,EAAE;AAJL,GADsC;AAO/CN,EAAAA,IAAI,EAAE;AACJO,IAAAA,KAAK,EAAE,SADH;AAEJC,IAAAA,QAAQ,EAAE,SAFN;AAGJC,IAAAA,SAAS,EAAE,MAHP;AAIJC,IAAAA,OAAO,EAAE,MAJL;AAKJC,IAAAA,MAAM,EAAE,SALJ;AAMJ,KAACT,KAAK,CAACU,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BL,MAAAA,QAAQ,EAAE;AADoB;AAN5B,GAPyC;AAiB/CM,EAAAA,OAAO,EAAE;AACPP,IAAAA,KAAK,EAAE,SADA;AAEPC,IAAAA,QAAQ,EAAE,MAFH;AAGPC,IAAAA,SAAS,EAAE,QAHJ;AAIPM,IAAAA,aAAa,EAAE,OAJR;AAKPC,IAAAA,UAAU,EAAE,MALL;AAMPL,IAAAA,MAAM,EAAE;AAND,GAjBsC;AAyB/Cb,EAAAA,mBAAmB,EAAE;AACnBmB,IAAAA,cAAc,EAAE,OADG;AAEnBC,IAAAA,MAAM,EAAE,MAFW;AAGnBC,IAAAA,KAAK,EAAE,MAHY;AAInBC,IAAAA,kBAAkB,EAAE,QAJD;AAKnBf,IAAAA,eAAe,EAAE;AALE;AAzB0B,CAAD,CAAhD;;AAkCA,eAAejB,UAAU,CAACa,SAAD,CAAV,CAAsBN,MAAtB,CAAf","sourcesContent":["\nimport React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport './css/About.css';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport OtherContact from './OtherContact';\nimport OtherNavigation from './OtherNavigation';\nimport StyledProps from './props/StyledProps';\nimport BlogCard from './components/BlogCard';\nimport { \n  Theme,\n  Grid,\n  Typography\n} from '@material-ui/core';\n\nconst Devlog = (props: StyledProps) => {\n  const classes = props.classes;\n  return (   \n    <Box className={classes.backgroundContainer}>\n      <OtherNavigation/>\n      <Container className={classes.section} maxWidth={false}>\n        <Grid container xs={6}>\n          <BlogCard title=\"Pixit\" subtitle=\"10.04.2020\">\n            <Typography className={classes.text}>\n              Recently, I have been interested in real time applications and decided to make my own real time app. \n              The first idea I thought of was building a real time coding editor that would allow for developers to collaborate more efficiently on debugging/writing code.\n              I thought it was a really cool, fresh idea that had a lot of potential and could help a lot of developers out there. So I got started. \n            </Typography>\n          </BlogCard>\n        </Grid>\n      </Container>\n      <OtherContact/>\n    </Box> \n  );\n}\n\nconst useStyles = (theme: Theme) => createStyles({\n  section: {\n    display: 'flex',\n    flexDirection: 'column',\n    backgroundColor: '#F7F3F2',\n    alignItems: 'center',\n  },\n  text: {\n    color: '#12130F',\n    fontSize: '1.25rem',\n    textAlign: 'left',\n    padding: '2rem',\n    cursor: 'default',\n    [theme.breakpoints.down('sm')]: {\n      fontSize: '1rem',\n    }\n  },\n  bigText: {\n    color: '#12130F',\n    fontSize: '3rem',\n    textAlign: 'center',\n    paddingBottom: '15rem',\n    fontWeight: 'bold',\n    cursor: 'default',\n  },\n  backgroundContainer: {\n    backgroundSize: 'cover',\n    height: '100%',\n    width: '100%',\n    backgroundPosition: 'center',\n    backgroundColor: '#F7F3F2',\n  }\n});\n\nexport default withStyles(useStyles)(Devlog);"]},"metadata":{},"sourceType":"module"}