{"ast":null,"code":"var _jsxFileName = \"/Users/nathanaelshim/Desktop/website/src/components/ProjectCard.tsx\";\nimport React, { useState } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport { withStyles, createStyles } from '@material-ui/styles';\nimport { useSpring, animated } from 'react-spring';\n\nconst ProjectCard = props => {\n  const classes = props.classes;\n  const calc = 1.05;\n\n  const trans = s => `perspective(1rem) scale(${s})`;\n\n  const [properties, set] = useSpring(() => ({\n    s: 1,\n    config: {\n      mass: 5,\n      tension: 700,\n      friction: 40\n    }\n  }));\n  const [isShowing, setIsShowing] = useState(false);\n  return /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(animated.div, {\n    onMouseMove: () => set({\n      s: calc\n    }),\n    onMouseLeave: () => set({\n      s: 1\n    }),\n    style: {\n      transform: properties.s.interpolate(trans)\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: classes.card,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'relative'\n    },\n    onMouseEnter: setIsShowing(true),\n    onMouseLeave: setIsShowing(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 25\n    }\n  }, isShowing && props.title), /*#__PURE__*/React.createElement(CardMedia, {\n    component: \"img\",\n    image: props.background,\n    className: classes.picture,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst useStyles = createStyles({\n  text: {\n    position: 'absolute',\n    left: '40%',\n    fontFamily: 'Montserrat',\n    color: '#12130F',\n    fontSize: '2rem',\n    textAlign: 'center',\n    padding: '1rem'\n  },\n  picture: {\n    height: '100%',\n    width: '100%',\n    opacity: 1,\n    '&:hover': {\n      opacity: .35,\n      transitionDuration: '.5s'\n    }\n  },\n  card: {\n    position: 'relative',\n    height: '100%',\n    width: '100%'\n  }\n});\nexport default withStyles(useStyles)(ProjectCard);","map":{"version":3,"sources":["/Users/nathanaelshim/Desktop/website/src/components/ProjectCard.tsx"],"names":["React","useState","Typography","Grid","Card","CardMedia","withStyles","createStyles","useSpring","animated","ProjectCard","props","classes","calc","trans","s","properties","set","config","mass","tension","friction","isShowing","setIsShowing","transform","interpolate","card","position","text","title","background","picture","useStyles","left","fontFamily","color","fontSize","textAlign","padding","height","width","opacity","transitionDuration"],"mappings":"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","sourcesContent":["import React, {useState, PropsWithChildren} from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport Card from '@material-ui/core/Card';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport StyledProps from '../props/StyledProps';\nimport ProjectCardProps from '../props/ProjectCardProps';\nimport {withStyles, createStyles} from '@material-ui/styles';\nimport {useSpring, animated} from 'react-spring';\n\n\n\n\nconst ProjectCard = (props: PropsWithChildren<StyledProps> & ProjectCardProps) => {\n    const classes = props.classes;\n    const calc = 1.05\n    const trans : any = (s : any) : any => `perspective(1rem) scale(${s})`    \n    const [properties, set] = useSpring(() => ({ s: 1, config: { mass: 5, tension: 700, friction: 40 } }))\n    const[isShowing, setIsShowing] = useState(false);\n    \n    return(\n        <Grid item xs={4}>\n            <animated.div\n            onMouseMove={() => set({ s: calc })}\n            onMouseLeave={() => set({ s: 1 })}\n            style={{ transform: properties.s.interpolate(trans) }}\n            >\n            <Card className={classes.card}>\n                    <div style={{position: 'relative'}} onMouseEnter={setIsShowing(true)} onMouseLeave={setIsShowing(false)}>\n                        <Typography className={classes.text}>\n                            {isShowing && (props.title)}\n                        </Typography>\n                        <CardMedia component=\"img\" image={(props.background)} className={classes.picture}/>\n                    </div>\n            </Card>\n            </animated.div>\n        </Grid>\n    );\n}\n\nconst useStyles = createStyles({\n    text: {\n      position: 'absolute',\n      left: '40%', \n      fontFamily: 'Montserrat',\n      color: '#12130F',\n      fontSize: '2rem',\n      textAlign: 'center',\n      padding: '1rem',\n    },\n    picture: {\n        height: '100%',\n        width: '100%',\n        opacity: 1,\n        '&:hover': {\n            opacity: .35,\n            transitionDuration: '.5s',\n        },\n    },\n    card: {\n        position: 'relative',\n        height: '100%',\n        width: '100%',\n    },\n  });\n  \n  export default withStyles(useStyles)(ProjectCard);"]},"metadata":{},"sourceType":"module"}